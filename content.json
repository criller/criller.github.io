{"meta":{"title":"criller博客-追求永无止境","subtitle":"","description":"","author":"criller","url":"https://criller.github.io","root":"/"},"pages":[{"title":"404","date":"2020-12-05T15:52:15.595Z","updated":"2020-12-05T15:52:15.595Z","comments":true,"path":"/404.html","permalink":"https://criller.github.io/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"关于","date":"2020-12-05T12:17:50.000Z","updated":"2020-12-06T07:31:33.621Z","comments":false,"path":"about/index.html","permalink":"https://criller.github.io/about/index.html","excerpt":"","text":"时间线内置标签 2020-07-24 2.6.6 -&gt; 3.0 如果有 hexo-lazyload-image 插件，需要删除并重新安装最新版本，设置 lazyload.isSPA: true。2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 use_cdn: true 则需要删除。2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。2.x 版本的置顶 top: true 改为了 pin: true，并且同样适用于 layout: page 的页面。如果使用了 hexo-offline 插件，建议卸载，3.0 版本默认开启了 pjax 服务。 2020-05-15 2.6.3 -&gt; 2.6.6 不需要额外处理。 2020-04-20 2.6.2 -&gt; 2.6.3 全局搜索 seotitle 并替换为 seo_title。group 组件的索引规则有变，使用 group 组件的文章内，group: group_name 对应的组件名必须是 group_name。group 组件的列表名优先显示文章的 short_title 其次是 title。"},{"title":"home","date":"2020-12-05T14:14:12.000Z","updated":"2020-12-05T14:35:40.516Z","comments":true,"path":"article/home.html","permalink":"https://criller.github.io/article/home.html","excerpt":"","text":""},{"title":"所有分类","date":"2020-12-05T12:21:34.000Z","updated":"2020-12-05T12:21:34.249Z","comments":true,"path":"categories/index.html","permalink":"https://criller.github.io/categories/index.html","excerpt":"","text":""},{"title":"1.什么是Git","date":"2020-12-06T04:39:25.000Z","updated":"2020-12-06T07:13:05.815Z","comments":false,"path":"docs/index.html","permalink":"https://criller.github.io/docs/index.html","excerpt":"","text":"W i k i全部项目文档索引 开源库 ProHUD「ProHUD = Toast + Alert + ActionSheet」用简便的方法拿到已发布的实例，避免重复发布实例。可对已发布的实例进行数据更新。可对所有实例设置监听事件。对多实例并存堆叠的极端情况做了优化。完全可定制并易于扩展。 ValueX「String &middot; Number &middot; Array &middot; Set &middot; Dictionary &middot; Data」有效避免后台返回数据类型异常导致程序崩溃，快速由已知对象得到期望的对象类型。 Inspire「主题式Swift开发工具包」包含颜色、字体、布局等，可配置可缓存 AXKit「综合型ObjC开发工具包」包含对系统类的功能扩展和一些常用控件的封装 常用文档 Apple Developer Git使用教程"},{"title":"我的朋友们","date":"2020-12-05T12:33:55.361Z","updated":"2020-12-05T12:33:55.355Z","comments":true,"path":"friends/index.html","permalink":"https://criller.github.io/friends/index.html","excerpt":"这里写友链上方的内容","text":"这里写友链上方的内容 这里可以写友链下方的文字备注，例如自己的友链规范、示例等。"},{"title":"[转]如何搭建基于Hexo的独立博客","date":"2017-07-04T16:00:00.000Z","updated":"2020-12-05T14:39:45.254Z","comments":true,"path":"hexo/index.html","permalink":"https://criller.github.io/hexo/index.html","excerpt":"","text":"","author":{"name":"xaoxuu","avatar":"https://cdn.jsdelivr.net/gh/xaoxuu/assets@master/avatar/avatar.png","url":"https://xaoxuu.com"}},{"title":"","date":"2020-12-05T12:29:40.745Z","updated":"2020-12-05T12:29:40.740Z","comments":true,"path":"mylist/index.html","permalink":"https://criller.github.io/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-12-05T12:25:05.000Z","updated":"2020-12-05T12:25:05.734Z","comments":true,"path":"tags/index.html","permalink":"https://criller.github.io/tags/index.html","excerpt":"","text":""},{"title":"1.什么是Git","date":"2020-12-06T04:39:25.000Z","updated":"2020-12-06T06:46:20.220Z","comments":false,"path":"docs/git/index.html","permalink":"https://criller.github.io/docs/git/index.html","excerpt":"","text":"什么是GitGit 是目前世界上最先进的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 Git 与 SVN 区别点 Git工作区、暂存区和版本库"},{"title":"2.安装与配置","date":"2020-12-06T04:39:25.000Z","updated":"2020-12-06T06:41:40.833Z","comments":false,"path":"docs/git/install-and-config.html","permalink":"https://criller.github.io/docs/git/install-and-config.html","excerpt":"","text":"安装Git 是目前世界上最先进的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 Git 与 SVN 区别点 配置git-ssh"}],"posts":[{"title":"redis 和 memcached 有什么区别?redis 的线程模型是什 么?为什么 redis 单线程却能支撑高并发?","slug":"reids/c2","date":"2020-12-06T14:40:17.000Z","updated":"2020-12-06T14:46:52.727Z","comments":false,"path":"reids/c2/","link":"","permalink":"https://criller.github.io/reids/c2/","excerpt":"","text":"面试官心理分析这个是问Redis的时候，最基本的问题了吧，Redis最基本的一个内部原理和特点，就是Redis实际上是一个单线程工作模型，你要是这个都不知道，那后面玩Redis的时候，出了问题岂不是什么都不知道？ 还有可能面试官会问你Redis和memcached的区别，但是memcached是早些年各大互联网公司常用的缓存方案，但是现在近几年基本都是Redis，没什么公司用memcached了。 面试题剖析Redis和memcached的区别Redis的线程模型为什么Redis单线程模型效率这么高？ 纯内存操作 核心是基于非阻塞的IO多路复用机制，这是Linux独有 单线程反而避免了多线程的频繁上下文切换问题","categories":[{"name":"redis","slug":"redis","permalink":"https://criller.github.io/categories/redis/"}],"tags":[{"name":"求职面试","slug":"求职面试","permalink":"https://criller.github.io/tags/%E6%B1%82%E8%81%8C%E9%9D%A2%E8%AF%95/"},{"name":"redis","slug":"redis","permalink":"https://criller.github.io/tags/redis/"}]},{"title":"项目中缓存是如何使用的?为什么要用缓存?缓存使用不当会造成什么后果?","slug":"reids/c1","date":"2020-12-06T14:12:32.000Z","updated":"2020-12-06T14:36:48.629Z","comments":false,"path":"reids/c1/","link":"","permalink":"https://criller.github.io/reids/c1/","excerpt":"","text":"面试官心理分析这个问题，互联网公司必问，要是一个人连缓存都不太清楚，那确实比较尴尬。 要是问到缓存，肯定先问问 你项目哪里用了缓存？ 为啥要用？ 不用行不行？ 如果用了以后可能会有什么不良后果？ 这就是看看你对缓存这个东西背后有没有思考，如果你就是傻乎乎的瞎用，没法给面试官一个合理的解答，那面试官对你印象肯定不太好，觉得你平时思考太少，就知道干活儿。 面试题剖析项目中缓存是如何使用的？这个，需要结合自己项目的业务来分析。 为什么要用缓存用缓存，主要有两个用途：高性能、高并发 高性能假设这么个场景，你有个操作，一个请求过来，你各种乱七八糟操作MySQL，半天查出来一个结果，耗时600ms。但是这个结果可能接下来几个小时都不会变了，或者变了也可以不用立即反馈给用户。那么此时怎么办？ 缓存啊，折腾600ms查出来的结果，扔缓存里，一个key对应一个value，下次再有人查，别走MySQL折腾600ms了，直接从缓存里通过一个key查出来一个value，2ms搞定。性能提升300倍。 就是对于一些需要复杂操作耗时查出来的结果，且确定后面不怎么变化，但是有很多请求，那么直接将查询出来的结果放在缓存中，后面直接读缓存就好。 高并发Mysql这么重的数据库，压根设计不是让你玩高并发的，虽然也可以玩，但是天然支持不好。MySQL单机支持到2000QPS也就开始报警了。所以要是你有个系统，高峰期一秒钟过来的请求有1W，那一个MySQL单机绝对会挂。你这个时候就只能上缓存，把更多数据放缓存中。缓存功能简单，说白了就是key-value式操作，单机支撑的并发量轻松一秒几万甚至十几万，支撑高并发so easy。单机承载并发量是MySQL单机的几十倍。 缓存是走内存的，内存天然就支撑高并发 用了缓存之后会有什么不良后果？常见的缓存问题有以下几个： 缓存与数据库双写不一致问题 缓存雪崩 缓存穿透 缓存并发竞争 这些后面的文章再详细说明。","categories":[{"name":"redis","slug":"redis","permalink":"https://criller.github.io/categories/redis/"}],"tags":[{"name":"求职面试","slug":"求职面试","permalink":"https://criller.github.io/tags/%E6%B1%82%E8%81%8C%E9%9D%A2%E8%AF%95/"},{"name":"redis","slug":"redis","permalink":"https://criller.github.io/tags/redis/"}]},{"title":"JRebel安装与激活","slug":"jrebel-active","date":"2020-12-06T13:25:04.000Z","updated":"2020-12-16T03:42:46.477Z","comments":false,"path":"jrebel-active/","link":"","permalink":"https://criller.github.io/jrebel-active/","excerpt":"","text":"JRebel支持热部署，极大提高了开发效率，每次代码改动，不需要重启服务 但是修改配置文件或者pom.xml，热部署不生效 安装JRebel插件Preferences -&gt; Plugins -&gt; marketplace, 搜索JRebel进行插件安装 激活JRebel 激活服务器地址： https://jrebel.qekang.com/{GUID} https://www.zpjeck.top/jrebel/[518dc87d-b942-4369-a635-323cfc81d0e1](http://www.zpjeck.top:8081/518dc87d-b942-4369-a635-323cfc81d0e1) 后面追加的也是GUID 生成GUID 步骤1:生成一个GUID： 在线生成GUID地址 步骤2: 根据反向代理服务器地址拼接激活地址 打开Jrebel激活面板 激活界面 恭喜你，可以开始使用JRebel进行热部署操作了！","categories":[{"name":"开发工具","slug":"开发工具","permalink":"https://criller.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"工具小技巧","slug":"工具小技巧","permalink":"https://criller.github.io/tags/%E5%B7%A5%E5%85%B7%E5%B0%8F%E6%8A%80%E5%B7%A7/"},{"name":"JRebel","slug":"JRebel","permalink":"https://criller.github.io/tags/JRebel/"}]},{"title":"[转]如何搭建基于Hexo的独立博客","slug":"post-title-with-whitespace","date":"2017-07-04T16:00:00.000Z","updated":"2020-12-06T14:27:51.699Z","comments":true,"path":"post-title-with-whitespace/","link":"https://xaoxuu.com/blog/2017-07-05-hexo-blog/","permalink":"https://criller.github.io/post-title-with-whitespace/","excerpt":"","text":"如何搭建基于Hexo的独立博客","categories":[],"tags":[],"author":{"name":"xaoxuu","avatar":"https://cdn.jsdelivr.net/gh/xaoxuu/assets@master/avatar/avatar.png","url":"https://xaoxuu.com"}},{"title":"Hello World","slug":"hello-world","date":"2016-12-05T03:26:51.000Z","updated":"2020-12-06T14:27:33.107Z","comments":false,"path":"hello-world/","link":"","permalink":"https://criller.github.io/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"author":"Jon"}],"categories":[{"name":"redis","slug":"redis","permalink":"https://criller.github.io/categories/redis/"},{"name":"开发工具","slug":"开发工具","permalink":"https://criller.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"求职面试","slug":"求职面试","permalink":"https://criller.github.io/tags/%E6%B1%82%E8%81%8C%E9%9D%A2%E8%AF%95/"},{"name":"redis","slug":"redis","permalink":"https://criller.github.io/tags/redis/"},{"name":"工具小技巧","slug":"工具小技巧","permalink":"https://criller.github.io/tags/%E5%B7%A5%E5%85%B7%E5%B0%8F%E6%8A%80%E5%B7%A7/"},{"name":"JRebel","slug":"JRebel","permalink":"https://criller.github.io/tags/JRebel/"}]}